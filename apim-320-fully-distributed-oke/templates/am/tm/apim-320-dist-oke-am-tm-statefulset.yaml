# Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "apim-320-dist-oke.resource.prefix" . }}-am-tm-statefulset
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      deployment: {{ template "apim-320-dist-oke.resource.prefix" . }}-am-tm
  serviceName: {{ template "apim-320-dist-oke.resource.prefix" . }}-am-tm-headless-service
  template:
    metadata:
      annotations:
        checksum.am.tm.conf: {{ include (print $.Template.BasePath "/am/tm/apim-320-dist-oke-am-tm-conf.yaml") . | sha256sum }}
      labels:
        deployment: {{ template "apim-320-dist-oke.resource.prefix" . }}-am-tm
    spec:
      initContainers:
        {{- if .Values.wso2.deployment.dependencies.mysql }}
        - name: init-apim-db
          image: busybox:1.32
          command: ['sh', '-c', 'echo -e "Checking for the availability of DBMS service"; while ! nc -z "{{ template "apim-320-dist-oke.resource.prefix" . }}-mysql-service" 3306; do sleep 1; printf "-"; done; echo -e "  >> DBMS service is available";']
        - name: init-mysql-connector-download
          image: busybox:1.32
          command:
            - /bin/sh
            - "-c"
            - |
              set -e
              connector_version=8.0.17
              wget https://repo1.maven.org/maven2/mysql/mysql-connector-java/${connector_version}/mysql-connector-java-${connector_version}.jar -P /mysql-connector-jar/
          volumeMounts:
            - name: mysql-connector-jar
              mountPath: /mysql-connector-jar
        {{- end }}
        - name: init-km
          image: busybox:1.32
          command: ['sh', '-c', 'echo -e "Checking for the availability of Key Manager deployment"; while ! nc -z {{ template "apim-320-dist-oke.resource.prefix" . }}-km-service 9443; do sleep 1; printf "-"; done; echo -e "  >> Key Manager has started";']
        - name: init-permissions-logs
          image: busybox
#          command: [ "sh", "-c", "find /home/wso2carbon/wso2am-3.2.0/repository/logs -not -path '/home/wso2carbon/wso2am-3.2.0/repository/logs/.snapshot*' -exec chmod 777 {} +" ]
          command: [ "sh", "-c", "echo 'Setting permissions on /home/wso2carbon/wso2am-3.2.1/repository/logs...';
                      find /home/wso2carbon/wso2am-3.2.1/repository/logs -not -path '/home/wso2carbon/wso2am-3.2.1/repository/logs/.snapshot*' -exec chmod 777 {} +;
                      if [ $? -eq 0 ]; then
                        echo 'Permissions set successfully.';
                      else
                        echo 'Error setting permissions, please check the NFS server settings.';
                      fi;"
          ]
          volumeMounts:
            - name: wso2am-tm-log-storage-volume
#              mountPath: /home/wso2carbon/wso2am-3.2.0/repository/logs
              mountPath: /home/wso2carbon/wso2am-3.2.1/repository/logs
        - name: init-permissions-executionplans
          image: busybox
          #          command: [ "sh", "-c", "find /home/wso2carbon/wso2am-3.2.0/repository/logs -not -path '/home/wso2carbon/wso2am-3.2.0/repository/logs/.snapshot*' -exec chmod 777 {} +" ]
          command: [ "sh", "-c", "echo 'Setting permissions on /home/wso2carbon/wso2am-3.2.1/repository/deployment/sever/executionplans...';
                    find /home/wso2carbon/wso2am-3.2.1/repository/deployment/server/executionplans -not -path '/home/wso2carbon/wso2am-3.2.1/repository/deployment/server/executionplans/.snapshot*' -exec chmod 777 {} +;
                    if [ $? -eq 0 ]; then
                      echo 'Permissions set successfully.';
                    else
                      echo 'Error setting permissions, please check the NFS server settings.';
                    fi;"
          ]
          volumeMounts:
            - name: wso2am-tm-shared-storage-volume
#              mountPath: /home/wso2carbon/wso2am-3.2.0/repository/deployment/server/executionplans
              mountPath: /home/wso2carbon/wso2am-3.2.1/repository/deployment/server/executionplans
      containers:
        - name: wso2am-tm
#          {{- if .Values.wso2.deployment.am.dockerRegistry }}
#          image: {{ .Values.wso2.deployment.am.dockerRegistry }}/{{ .Values.wso2.deployment.am.imageName }}
#          {{- $tag := .Values.wso2.deployment.am.imageTag }}
#          {{- if not (eq $tag "") }}{{- printf ":%s" $tag -}}{{- end }}
#          {{- else if or (eq .Values.wso2.subscription.username "") (eq .Values.wso2.subscription.password "") }}
#          image: wso2/{{ .Values.wso2.deployment.am.imageName }}:{{ .Values.wso2.deployment.am.imageTag }}
#          {{- else }}
#          image: docker.wso2.com/{{ .Values.wso2.deployment.am.imageName }}:{{ .Values.wso2.deployment.am.imageTag }}
#          {{- end }}
#          image: janithcmw/wso2apim:320.373
          image: janithcmw/wso2apim:321.7
          imagePullPolicy: {{ .Values.wso2.deployment.am.imagePullPolicy }}
          env:
            - name: PROFILE_NAME
              value: "traffic-manager"
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: JVM_MEM_OPTS
              value: "-Xms{{ .Values.wso2.deployment.am.resources.jvm.heap.memory.xms }} -Xmx{{ .Values.wso2.deployment.am.resources.jvm.heap.memory.xmx }}"
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - nc -z localhost 9611
            initialDelaySeconds: {{ .Values.wso2.deployment.am.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.wso2.deployment.am.livenessProbe.periodSeconds }}
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - nc -z localhost 9611
            initialDelaySeconds: {{ .Values.wso2.deployment.am.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.wso2.deployment.am.readinessProbe.periodSeconds }}
          lifecycle:
            preStop:
              exec:
                command:  ['sh', '-c', '${WSO2_SERVER_HOME}/bin/wso2server.sh stop']
          resources:
            requests:
              memory: {{ .Values.wso2.deployment.am.resources.requests.memory }}
              cpu: {{ .Values.wso2.deployment.am.resources.requests.cpu }}
            limits:
              memory: {{ .Values.wso2.deployment.am.resources.limits.memory }}
              cpu: {{ .Values.wso2.deployment.am.resources.limits.cpu }}
          securityContext:
            runAsUser: 802
          ports:
            - containerPort: 9611
              protocol: TCP
            - containerPort: 9711
              protocol: TCP
            - containerPort: 5672
              protocol: TCP
            - containerPort: 9443
              protocol: TCP
          volumeMounts:
            - name: wso2am-tm-shared-storage-volume
#              mountPath: /home/wso2carbon/wso2am-3.2.0/repository/deployment/server/executionplans
              mountPath: /home/wso2carbon/wso2am-3.2.1/repository/deployment/server/executionplans
            - name: wso2am-tm-log-storage-volume
#              mountPath: /home/wso2carbon/wso2am-3.2.0/repository/logs
              mountPath: /home/wso2carbon/wso2am-3.2.1/repository/logs
            - name: wso2am-tm-conf
              mountPath: /home/wso2carbon/wso2-config-volume/repository/conf
            - name: wso2am-tm-conf-entrypoint
              mountPath: /home/wso2carbon/docker-entrypoint.sh
              subPath: docker-entrypoint.sh
            {{ if .Values.wso2.deployment.dependencies.mysql }}
            - name: mysql-connector-jar
              mountPath: /home/wso2carbon/wso2-artifact-volume/repository/components/dropins
            {{ end }}
      serviceAccountName: {{ .Values.kubernetes.serviceAccount }}
      {{ if .Values.wso2.deployment.am.imagePullSecrets.enable }}
      imagePullSecrets:
        - name: {{ .Values.wso2.deployment.am.imagePullSecrets.secretName }}
      {{ end }}
      volumes:
        - name: wso2am-tm-shared-storage-volume
          persistentVolumeClaim:
            claimName: {{ template "apim-320-dist-oke.resource.prefix" . }}-am-tm-shared-executionplans-volume-claim
        - name: wso2am-tm-log-storage-volume
          persistentVolumeClaim:
            claimName: {{ template "apim-320-dist-oke.resource.prefix" . }}-am-tm-log-storage-volume-claim
        - name: wso2am-tm-conf
          configMap:
            name: {{ template "apim-320-dist-oke.resource.prefix" . }}-am-tm-conf
        - name: wso2am-tm-conf-entrypoint
          configMap:
            name: {{ template "apim-320-dist-oke.resource.prefix" . }}-am-tm-conf-entrypoint
            defaultMode: 0407
        {{ if .Values.wso2.deployment.dependencies.mysql }}
        - name: mysql-connector-jar
          emptyDir: {}
        {{ end }}
