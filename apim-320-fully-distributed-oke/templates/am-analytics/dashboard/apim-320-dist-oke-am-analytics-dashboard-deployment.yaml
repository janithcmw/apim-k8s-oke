# Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "apim-320-dist-oke.resource.prefix" . }}-am-ana-dashboard-deployment
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.wso2.deployment.analytics.dashboard.replicas }}
  strategy:
    rollingUpdate:
      maxSurge: {{ .Values.wso2.deployment.analytics.dashboard.strategy.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.wso2.deployment.analytics.dashboard.strategy.rollingUpdate.maxUnavailable }}
    type: RollingUpdate
  selector:
    matchLabels:
      deployment: {{ template "apim-320-dist-oke.resource.prefix" . }}-am-analytics-dashboard
  template:
    metadata:
      annotations:
        checksum.am.analytics.dashboard.conf: {{ include (print $.Template.BasePath "/am-analytics/dashboard/apim-320-dist-oke-am-analytics-dashboard-conf.yaml") . | sha256sum }}
      labels:
        deployment: {{ template "apim-320-dist-oke.resource.prefix" . }}-am-analytics-dashboard
    spec:
      initContainers:
      {{- if .Values.wso2.deployment.dependencies.mysql }}
        - name: init-mysql-db
          image: busybox:1.32
          command: ['sh', '-c', 'echo -e "Checking for the availability of DBMS service"; while ! nc -z "{{ template "apim-320-dist-oke.resource.prefix" . }}-mysql-service" 3306; do sleep 1; printf "-"; done; echo -e "  >> DBMS service is available";']
        - name: init-mysql-connector-download
          image: busybox:1.32
          command:
            - /bin/sh
            - "-c"
            - |
              set -e
              connector_version=8.0.17
              wget https://repo1.maven.org/maven2/mysql/mysql-connector-java/${connector_version}/mysql-connector-java-${connector_version}.jar -P /mysql-connector-jar/
          volumeMounts:
            - name: mysql-connector-jar
              mountPath: /mysql-connector-jar
      {{- end }}
        - name: init-am-publisher
          image: busybox:1.32
          command: ['sh', '-c', 'echo -e "Checking for the availability of API Manager Publisher deployment"; while ! nc -z  {{ template "apim-320-dist-oke.resource.prefix" . }}-am-publisher-service 9443; do sleep 1; printf "-"; done; echo -e "  >> API Manager Publisher service has started";']
        - name: init-am-devportal
          image: busybox:1.32
          command: ['sh', '-c', 'echo -e "Checking for the availability of API Manager DevPortal deployment"; while ! nc -z  {{ template "apim-320-dist-oke.resource.prefix" . }}-am-devportal-service 9443; do sleep 1; printf "-"; done; echo -e "  >> API Manager DevPortal service has started";']
        - name: init-permissions-logs
          image: busybox
#          command: [ "sh", "-c", "find /home/wso2carbon/wso2am-3.2.1/repository/logs -not -path '/home/wso2carbon/wso2am-3.2.1/repository/logs/.snapshot*' -exec chmod 777 {} +" ]
          command: [ "sh", "-c", "echo 'Setting permissions on /home/wso2carbon/wso2am-analytics-3.2.0/wso2/dashboard/logs...';
                      find /home/wso2carbon/wso2am-analytics-3.2.0/wso2/dashboard/logs -not -path '/home/wso2carbon/wso2am-analytics-3.2.0/wso2/dashboard/logs/.snapshot*' -exec chmod 777 {} +;
                      if [ $? -eq 0 ]; then
                        echo 'Permissions set successfully.';
                      else
                        echo 'Error setting permissions, please check the NFS server settings.';
                      fi;"
          ]
          volumeMounts:
            - name: wso2am-analytics-dashboard-log-storage-volume
              mountPath: /home/wso2carbon/wso2am-analytics-3.2.0/wso2/dashboard/logs
      containers:
      - name: wso2am-analytics-dashboard
        {{- if .Values.wso2.deployment.analytics.dashboard.dockerRegistry }}
        image: {{ .Values.wso2.deployment.analytics.dashboard.dockerRegistry }}/{{ .Values.wso2.deployment.analytics.dashboard.imageName }}
        {{- $tag := .Values.wso2.deployment.analytics.dashboard.imageTag }}
        {{- if not (eq $tag "") }}{{- printf ":%s" $tag -}}{{- end }}
        {{- else if or (eq .Values.wso2.subscription.username "") (eq .Values.wso2.subscription.password "") }}
        image: wso2/{{ .Values.wso2.deployment.analytics.dashboard.imageName }}:{{ .Values.wso2.deployment.analytics.dashboard.imageTag }}
        {{- else }}
        image: docker.wso2.com/{{ .Values.wso2.deployment.analytics.dashboard.imageName }}:{{ .Values.wso2.deployment.analytics.dashboard.imageTag }}
        {{- end }}
        imagePullPolicy: {{ .Values.wso2.deployment.analytics.dashboard.imagePullPolicy }}
        livenessProbe:
          exec:
            command:
              - /bin/sh
              - -c
              - nc -z localhost 9643
          initialDelaySeconds: {{ .Values.wso2.deployment.analytics.dashboard.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.wso2.deployment.analytics.dashboard.livenessProbe.periodSeconds }}
        readinessProbe:
          exec:
            command:
              - /bin/sh
              - -c
              - nc -z localhost 9643
          initialDelaySeconds: {{ .Values.wso2.deployment.analytics.dashboard.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.wso2.deployment.analytics.dashboard.readinessProbe.periodSeconds }}
        lifecycle:
          preStop:
            exec:
              command:  ['sh', '-c', '${WSO2_SERVER_HOME}/bin/dashboard.sh stop']
        resources:
          requests:
            memory: {{ .Values.wso2.deployment.analytics.dashboard.resources.requests.memory }}
            cpu: {{ .Values.wso2.deployment.analytics.dashboard.resources.requests.cpu }}
          limits:
            memory: {{ .Values.wso2.deployment.analytics.dashboard.resources.limits.memory }}
            cpu: {{ .Values.wso2.deployment.analytics.dashboard.resources.limits.cpu }}
        securityContext:
          runAsUser: 802
        ports:
          - containerPort: 9643
            protocol: "TCP"
        volumeMounts:
          - name: wso2am-analytics-dashboard-conf
            mountPath: /home/wso2carbon/wso2-config-volume/conf/dashboard/deployment.yaml
            subPath: deployment.yaml
          - name: wso2am-analytics-dashboard-log-storage-volume
            mountPath: /home/wso2carbon/wso2am-analytics-3.2.0/wso2/dashboard/logs
          - name: wso2am-analytics-dashboard-bin
            mountPath: /home/wso2carbon/wso2-config-volume/wso2/dashboard/bin/carbon.sh
            subPath: carbon.sh
          {{ if .Values.wso2.deployment.dependencies.mysql }}
          - name: mysql-connector-jar
            mountPath: /home/wso2carbon/wso2-artifact-volume/lib
          {{ end }}
      serviceAccountName: {{ .Values.kubernetes.serviceAccount }}
      {{ if .Values.wso2.deployment.analytics.imagePullSecrets.enable }}
      imagePullSecrets:
        - name: {{ .Values.wso2.deployment.analytics.imagePullSecrets.secretName }}
      {{ end }}
      volumes:
        - name: wso2am-analytics-dashboard-conf
          configMap:
            name: {{ template "apim-320-dist-oke.resource.prefix" . }}-am-analytics-dashboard-conf
        - name: wso2am-analytics-dashboard-bin
          configMap:
            name: {{ template "apim-320-dist-oke.resource.prefix" . }}-am-analytics-dashboard-bin
        - name: wso2am-analytics-dashboard-log-storage-volume
          persistentVolumeClaim:
            claimName: {{ template "apim-320-dist-oke.resource.prefix" . }}-am-analytics-dashboard-log-storage-volume-claim
        {{ if .Values.wso2.deployment.dependencies.mysql }}
        - name: mysql-connector-jar
          emptyDir: {}
        {{ end }}
