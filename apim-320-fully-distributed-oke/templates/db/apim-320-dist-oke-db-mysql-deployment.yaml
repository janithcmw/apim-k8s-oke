
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "apim-320-dist-oke.resource.prefix" . }}-mysql-deployment
  namespace : {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      deployment: wso2am-mysql
      product: api-manager
  template:
    metadata:
      labels:
        deployment: wso2am-mysql
        product: api-manager
    spec:
      initContainers:
        - name: init-permissions
          image: busybox
          command: [ "sh", "-c", "echo 'Setting permissions on /var/lib/mysql...';
            find /var/lib/mysql -not -path '/var/lib/mysql/.snapshot*' -exec chmod 777 {} +;
            if [ $? -eq 0 ]; then
              echo 'Permissions set successfully.';
            else
              echo 'Error setting permissions, please check the NFS server settings.';
            fi;" ]
          volumeMounts:
            - name: {{ template "apim-320-dist-oke.resource.prefix" . }}-db-mysql-storage
              mountPath: /var/lib/mysql
      containers:
        - name: wso2am-mysql
          image: mysql:5.7
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - "mysqladmin ping -u root -p${MYSQL_ROOT_PASSWORD}"
            initialDelaySeconds: 60
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - "mysqladmin ping -u root -p${MYSQL_ROOT_PASSWORD}"
            initialDelaySeconds: 60
            periodSeconds: 10
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 999
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: root
            - name: MYSQL_USER
              value: wso2carbon
            - name: MYSQL_PASSWORD
              value: wso2carbon
          ports:
            - containerPort: 3306
              protocol: TCP
          volumeMounts:
            - name: {{ template "apim-320-dist-oke.resource.prefix" . }}-db-mysql-scripts
              mountPath: /docker-entrypoint-initdb.d
            - name: {{ template "apim-320-dist-oke.resource.prefix" . }}-db-mysql-storage
              mountPath: /var/lib/mysql
          args: ["--max-connections", "10000"]
      volumes:
        - name: {{ template "apim-320-dist-oke.resource.prefix" . }}-db-mysql-scripts
          configMap:
            name: {{ template "apim-320-dist-oke.resource.prefix" . }}-db-mysql-scripts-cm
        - name: {{ template "apim-320-dist-oke.resource.prefix" . }}-db-mysql-storage
          persistentVolumeClaim:
            claimName: {{ template "apim-320-dist-oke.resource.prefix" . }}-db-mysql-storage-volume-claim
      serviceAccountName: {{ .Values.kubernetes.serviceAccount }}
---
